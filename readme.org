* clause.el

This repo provides functions to move, mark, kill and transpose by clause.

It provides the following commands:

| =clause-forward-clause=      | move to next clause            |
| =clause-backward-clause=     | move to previous clause        |
| =clause-kill-current-clause= | kill whole current clause      |
| =clause-kill-to-clause=      | kill from point to next clause |
| =clause-mark-clause=         | mark whole current clause      |
| =clause-mark-to-clause=      | mark from point to next clause |
| =clause-transpose-clauses=   | transpose current clause       |

A clause is delimited by =,= =;= =:= =(= =)= and =â€“= [en or em dashes], in addition to the characters in =sentence-end=. If you want to add any extra clause delimiters, customize =clause-extra-delimiters=.

If aims to leave point in the same relative position as =forward-sentence= and =backward-sentence=, even though with some clauses this can only be approximated. So moving forward should leave point after the (last) clause character, before any space, while moving backward should leave point after any clause character and after any space. Likewise, as with =kill-sentence=, killing forward should kill the clause character but not a following space.

It should handle org footnotes correctly too, if they aren't inline.

If you set =clause-use-sentex= to t, this library uses the complex sentence-ending rules in [[https://codeberg.org/martianh/sentex][sentex.el]] to avoid counting things like "i.e." as ending sentences. You may need to set the language for =sentex= to use. See =sentex-current-language= and =sentex-set-language=.

** bindings

I use bindings like this:

#+begin_src emacs-lisp
  (global-set-key (kbd "C-S-E") #'clause-forward-clause)
  (global-set-key (kbd "C-S-A") #'clause-backward-clause)
  (global-set-key (kbd "C-S-K") #'clause-kill-to-clause)
  (global-set-key (kbd "C-S-U") #'clause-kill-current-clause)
  ;; mark-thing-at binding:
  (define-key mark-thing-at-mode-map (kbd "C-x m a") #'clause-mark-clause)
#+end_src

** feedback, contributing

If you use it and run into any issues, feel free to open an issue or email me.

If you can see how to improve it, feel free to send a patch or open a PR.

